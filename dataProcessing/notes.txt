The plan:
 

Each leg of the trip fare/nofare/fare, etc should be its own path in the SVG.

To do this, pass 10 coordinates to the google directions API (figure out how many total legs you have for the day, then generate queries, each with 10 coordinates.  Remember coordinate 10 of the first query will be the same as coordinate 1 of the 2nd query)


- results will have 9 "legs".  Each leg should correspond to a fare or nofare segment.  Each leg will be comprised of steps - you will need to decode and assemble all the steps into one segment.  Also assign IDs to the legs.


Tween the stroke-dasharray of the path as in http://bl.ocks.org/KoGor/8163022 but based on the relative time for that segment.






http://maps.googleapis.com/maps/api/directions/json?origin=Toronto&destination=Montreal&key=API_KEY



Google API Key
AIzaSyAOZmSuvn9Fzgx075mBoTaLthKi4w-7VCE


http://maps.googleapis.com/maps/api/directions/json?origin=Toronto&destination=Montreal&key=AIzaSyAOZmSuvn9Fzgx075mBoTaLthKi4w-7VCE


388Bridge
40.691538,-73.985327

Some other address
40.691099,-73.991785

40.694532,-73.990841

https://maps.googleapis.com/maps/api/directions/json?origin=40.691538,-73.985327&destination=40.691099,-73.991785&key=AIzaSyAOZmSuvn9Fzgx075mBoTaLthKi4w-7VCE


https://maps.googleapis.com/maps/api/directions/json?origin=40.691538,-73.985327&destination=40.691099,-73.991785&waypoints=40.694532,-73.990841&key=AIzaSyAOZmSuvn9Fzgx075mBoTaLthKi4w-7VCE

https://maps.googleapis.com/maps/api/directions/json?origin=40.691538,-73.985327&destination=40.691099,-73.991785&waypoints=40.702942,-74.011589|40.713051,-73.879333|40.775448,-73.947609|40.708851,-74.005829|40.799927,-73.970009|40.77932,-73.950729|40.77969,-73.973564|40.800285,-73.97113&key=AIzaSyAOZmSuvn9Fzgx075mBoTaLthKi4w-7VCE


40.702942,-74.011589|40.713051,-73.879333|40.775448,-73.947609|40.708851,-74.005829|40.799927,-73.970009|40.77932,-73.950729|40.77969,-73.973564|40.800285,-73.97113|40.785099,-73.97892|40.794502,-73.963554|40.78933,-73.973946|40.795185,-73.965935|40.793217,-73.974785|40.783363,-73.976578|40.775646,-73.983513|40.788914,-73.977684|40.772053,-73.965698|40.774998,-73.983932|40.706585,-74.00528|40.773083,-73.952248|40.788574,-73.978287|40.767311,-73.98632|40.790157,-73.965965|40.804241,-73.966492|40.775017,-73.953972|40.792789,-73.964806|40.75787,-73.979332|40.76762,-73.963432|40.780819,-73.972733|40.757813,-73.97966|40.751671,-73.973785|40.780872,-73.972687|40.722233,-73.993195|40.751392,-73.973976|40.726494,-74.005302|40.713455,-73.998482|40.734722,-74.008606|40.727818,-74.005424|40.760632,-73.97596|40.74931,-74.002937|40.758789,-73.985298|40.763302,-73.97435|40.728512,-74.007172|40.763168,-73.984215|40.738029,-73.983749|40.726547,-74.006805|40.761848,-73.986298|40.727985,-73.994621|40.766663,-73.954742|40.759815,-73.9785|40.755249,-73.974419|40.766884,-73.9561|40.770435,-73.98069|40.760441,-73.971786|40.782524,-73.955322|40.76228,-73.979607|40.748486,-73.989662|40.758312,-73.980087|40.774307,-73.988625|40.753822,-73.989349|40.748341,-73.988655|40.772224,-73.989555|40.707752,-74.016861|40.718739,-74.009148|40.715366,-74.015877|40.702747,-74.008888|40.736626,-73.977798|40.715126,-74.013809|40.787075,-73.954071|40.779697,-73.944466|40.718346,-74.000389|40.789555,-73.952538|40.794571,-73.972008|40.683796,-73.977364|40.722015,-73.985329|40.801388,-73.954201|40.721199,-73.98101|40.748562,-73.9869|40.717548,-73.988724|40.717949,-73.990273|40.692142,-73.987312|40.662334,-73.996239|40.727062,-73.98378|40.738171,-73.987953|40.727528,-73.982819|40.688671,-73.989502